data:
  train:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.pascal_dataset
        class: PascalDataset
        PascalDataset:
          image_size: 300
          VOC2012:
            image_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2012/JPEGImages/'''
            label_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2012/Annotations/'''
            txt_path: '''../efficient_det_pytorch/dataset/PASCALVOC2012/ImageSets/Segmentation/train.txt'''
          VOC2007:
            image_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2007/VOCtrainval_06-Nov-2007/VOCdevkit/VOC2007/JPEGImages/'''
            label_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2007/VOCtrainval_06-Nov-2007/VOCdevkit/VOC2007/Annotations/'''
          image_extent: '''.jpg'''
          label_extent: '''.xml'''
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          classes:
            aeroplane: 1
            bicycle: 2
            bird: 3
            boat: 4
            bottle: 5
            bus: 6
            car: 7
            cat: 8
            chair: 9
            cow: 10
            diningtable: 11
            dog: 12
            horse: 13
            motorbike: 14
            person: 15
            pottedplant: 16
            sheep: 17
            sofa: 18
            train: 19
            tvmonitor: 20
          transforms:
            - iaa.Fliplr(p=0.5)
      batch_size: 32
      shuffle: True
      pin_memory: True
      num_workers: 12
      drop_last: False
      collate_fn: 'lambda batch:tuple(zip(*batch))'
  
  train_eval:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.pascal_dataset
        class: PascalDataset
        PascalDataset:
          image_size: 300
          VOC2012:
            image_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2012/JPEGImages/'''
            label_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2012/Annotations/'''
            txt_path: '''../efficient_det_pytorch/dataset/PASCALVOC2012/ImageSets/Segmentation/train.txt'''
          VOC2007:
            image_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2007/VOCtrainval_06-Nov-2007/VOCdevkit/VOC2007/JPEGImages/'''
            label_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2007/VOCtrainval_06-Nov-2007/VOCdevkit/VOC2007/Annotations/'''
          image_extent: '''.jpg'''
          label_extent: '''.xml'''
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          classes:
            aeroplane: 1
            bicycle: 2
            bird: 3
            boat: 4
            bottle: 5
            bus: 6
            car: 7
            cat: 8
            chair: 9
            cow: 10
            diningtable: 11
            dog: 12
            horse: 13
            motorbike: 14
            person: 15
            pottedplant: 16
            sheep: 17
            sofa: 18
            train: 19
            tvmonitor: 20
      batch_size: 32
      shuffle: False
      pin_memory: True
      num_workers: 12
      drop_last: False
      collate_fn: 'lambda batch:tuple(zip(*batch))'
  
  valid:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.pascal_dataset
        class: PascalDataset
        PascalDataset:
          image_size: 300
          VOC2012:
            image_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2012/JPEGImages/'''
            label_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2012/Annotations/'''
            txt_path: '''../efficient_det_pytorch/dataset/PASCALVOC2012/ImageSets/Segmentation/val.txt'''
          VOC2007:
            image_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2007/VOCtest_06-Nov-2007/VOCdevkit/VOC2007/JPEGImages/'''
            label_dir: '''../efficient_det_pytorch/dataset/PASCALVOC2007/VOCtest_06-Nov-2007/VOCdevkit/VOC2007/Annotations/'''
          image_extent: '''.jpg'''
          label_extent: '''.xml'''
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
          classes:
            aeroplane: 1
            bicycle: 2
            bird: 3
            boat: 4
            bottle: 5
            bus: 6
            car: 7
            cat: 8
            chair: 9
            cow: 10
            diningtable: 11
            dog: 12
            horse: 13
            motorbike: 14
            person: 15
            pottedplant: 16
            sheep: 17
            sofa: 18
            train: 19
            tvmonitor: 20
      batch_size: 32
      shuffle: False
      pin_memory: True
      num_workers: 12
      drop_last: False
      collate_fn: 'lambda batch:tuple(zip(*batch))'

model:
  module: flame.core.model.ssd300_vgg16
  class: SSD300VGG16
  SSD300VGG16:
    num_classes: 21
    pretrained: True
    pretrained_backbone: False

optim:
  module: torch.optim
  class: SGD
  SGD:
    params: config['model'].parameters()
    lr: 0.005
    momentum: 0.95
    weight_decay: 0.0005

# optim:
#   module: torch.optim
#   class: SGD
#   SGD:
#     params: config['model'].parameters()
#     lr: 0.08
#     momentum: 0.9
#     nesterov: True

train_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['train_eval']
    device: '''cuda'''

valid_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['valid']
    device: '''cuda'''

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      mAP:
        module: flame.handlers.metrics.mAP
        class: mAP
        mAP:
          num_classes: 21
          iou_threshold: 0.5
          box_format: '''corners'''
          output_transform: 'lambda x: (x[0], x[1])'
    attach_to:
      train_evaluator: '''train'''
      valid_evaluator: '''valid'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''train''' 
      - '''valid'''

history:
  module: flame.handlers.checkpoint
  class: History

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: ''''''
    mode: '''train'''

terminate_on_nan:
  module: flame.handlers.terminate_on_nan
  class: TerminateOnNan

lr_scheduler:
  module: flame.handlers.lr_scheduler
  class: ReduceLROnPlateau
  ReduceLROnPlateau:
    score_name: '''mAP'''
    evaluator_name: '''valid_evaluator'''
    mode: '''max'''
    patience: 10
    verbose: True

early_stopping:
  module: flame.handlers.early_stopping
  class: EarlyStopping
  EarlyStopping:
    score_name: '''mAP'''
    evaluator_name: '''valid_evaluator'''
    mode: '''max'''
    patience: 50

best_saver:
  module: flame.handlers.checkpoint
  class: BestSaver
  BestSaver:
    dirname: '''checkpoint/VOC2007/ssd300'''
    score_name: '''mAP'''
    mode: '''max'''
    evaluator_name: '''valid_evaluator'''
    n_saved: 1

backup_saver:
  module: flame.handlers.checkpoint
  class: BackupSaver
  BackupSaver:
    modules:
      - '''model'''
      - '''optim'''
      - '''backup_saver'''
      - '''best_saver'''
      - '''history'''
      - '''lr_scheduler'''
      - '''early_stopping'''
    dirname: '''checkpoint/VOC2007/ssd300'''
    save_interval: 1
    n_saved: 1

engine:
  module: flame.core.engine.engine
  class: Trainer
  Trainer:
    dataset: config['data']['train']
    device: '''cuda'''
    max_epochs: 10000

extralibs:
  torch: torch
  iaa: imgaug.augmenters
